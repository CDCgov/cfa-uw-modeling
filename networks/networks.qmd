---
title: Network Dev & Diagnostics
format: gfm
author: Emily D. Pollock
date: 2025-02-25
params:
  cores: 10
---

```{r}
#| label: load data
#| echo: false
library(EpiModel)
load(here::here("networks", "fits", "2025-02-21", nw.rda))
main <- est[[1]]
cas <- est[[2]]
inst <- est[[3]]
```


The doc loads network fits and runs performance diagnostics.

Main Network (Marriages, Cohabitations)

```{r}
#| label: main diag

main_dynamic <- netdx(main, dynamic = TRUE, nsims = 10, nsteps = 1000, ncores = cores)
main_dynamic
```

Casual Network

```{r}
#| label: cas diag

cas_dynamic <- netdx(cas, dynamic = TRUE, nsims = 10, nsteps = 1000, ncores = cores)
cas_dynamic
```

Inst Network

```{r}
#| label: inst diag

inst_static <- netdx(inst, dynamic = FALSE, nsims = 1000)
inst_static
```

Plot: Empirical vs Modeled

```{r}
#| label: Plot
## empirical dist

x <- yaml::read_yaml(here::here("params", "nw_params.yaml"))
nw <- inst$newnetwork

emp <- data.frame(
  main = x$main$nodefactor$age_race,
  cas = x$casual$nodefactor$age_race,
  age = rep(15:49, each = 4),
  race = rep(c("B", "H", "O", "W"), 7),
  names = paste0(rep(15:49, each = 4), c("B", "H", "O", "W"))
)

# modeled dist
dat <- data.frame(
  age = floor(nw %v% "age"),
  age_group = nw %v% "age_group",
  race = nw %v% "race",
  d = nw %v% "deg_main",
  c = nw %v% "deg_casual"
)

comp <- dat |>
  dplyr::group_by(age, race) |>
  dplyr::summarize(
    main_mod = mean(d),
    cas_mod = mean(c)
  ) |>
  dplyr::left_join(emp, by = c("age", "race")) |>
  tidyr::pivot_longer(
    cols = c("main", "main_mod", "cas", "cas_mod"),
    names_to = c("type"), values_to = "vals"
  )

comp |>
  dplyr::filter(type %in% c("main", "main_mod")) |>
  ggplot2::ggplot(ggplot2::aes(x = age, y = vals, col = type)) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth(span = 0.75) +
  ggplot2::facet_wrap(~race)

comp |>
  dplyr::filter(type %in% c("cas", "cas_mod")) |>
  ggplot2::ggplot(ggplot2::aes(x = age, y = vals, col = type)) +
  ggplot2::geom_point() +
  ggplot2::geom_smooth(span = 0.75) +
  ggplot2::facet_wrap(~race)
```
